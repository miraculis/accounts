<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="ignite.cfg-server" class="org.apache.ignite.configuration.IgniteConfiguration">
        <property name="gridName" value="testGrid"/>
        <property name="clientMode" value="false"/>
        <property name="peerClassLoadingEnabled" value="true"/>
        <property name="transactionConfiguration">
            <bean class="org.apache.ignite.configuration.TransactionConfiguration">
                <!-- Configure TM lookup here. -->
            </bean>
        </property>
        <property name="discoverySpi">
            <bean class="org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder">
                        <property name="addresses">
                            <list>
                                <value>127.0.0.1:47500</value>
                            </list>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>

        <property name="cacheConfiguration">
            <list>
                <bean class="org.apache.ignite.configuration.CacheConfiguration">
                    <!-- Set a cache name. -->
                    <property name="name" value="accounts"/>

                    <!-- Set atomicity mode, can be ATOMIC or TRANSACTIONAL.
                                         ATOMIC is default. -->
                    <property name="atomicityMode" value="TRANSACTIONAL"/>
                    <property name="readThrough" value="true"></property>
                    <property name="writeThrough" value="true"></property>
                    <!-- Set cacheStoreFactory-->
                    <property name="cacheStoreFactory">
                        <bean class="javax.cache.configuration.FactoryBuilder" factory-method="factoryOf">
                            <constructor-arg value="accounts.dao.AccountsStore"></constructor-arg>
                        </bean>
                    </property>
                </bean>
                <bean class="org.apache.ignite.configuration.CacheConfiguration">
                    <!-- Set a cache name. -->
                    <property name="name" value="transfers"/>

                    <!-- Set atomicity mode, can be ATOMIC or TRANSACTIONAL.
                                         ATOMIC is default. -->
                    <property name="atomicityMode" value="ATOMIC"/>
                    <property name="readThrough" value="true"></property>
                    <property name="writeThrough" value="true"></property>
                    <!-- Set cacheStoreFactory-->
                    <property name="cacheStoreFactory">
                        <bean class="javax.cache.configuration.FactoryBuilder" factory-method="factoryOf">
                            <constructor-arg value="accounts.dao.TransfersStore"></constructor-arg>
                        </bean>
                    </property>
                </bean>

                <bean class="org.apache.ignite.configuration.CacheConfiguration">
                    <!-- Set a cache name. -->
                    <property name="name" value="transfers-grouped-by-account"/>

                    <!-- Set atomicity mode, can be ATOMIC or TRANSACTIONAL.
                                         ATOMIC is default. -->
                    <property name="atomicityMode" value="ATOMIC"/>
                    <property name="readThrough" value="true"></property>
                    <property name="writeThrough" value="true"></property>
                    <!-- Set cacheStoreFactory-->
                    <property name="cacheStoreFactory">
                        <bean class="javax.cache.configuration.FactoryBuilder" factory-method="factoryOf">
                            <constructor-arg value="accounts.dao.GrouppedTransfersStore"></constructor-arg>
                        </bean>
                    </property>
                </bean>

            </list>
        </property>
    </bean>
</beans>
